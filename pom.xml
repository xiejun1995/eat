<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>cn.kgc.eat</groupId>
  <artifactId>eat</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>eat Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <!-- spring版本号 -->
    <spring.version>5.2.1.RELEASE</spring.version>
    <!-- mybatis版本号 -->
    <mybatis.version>3.5.3</mybatis.version>
    <!--Spring面向切面编程中切入点表达式所需jar包-->
    <aspectjweaver.version>1.6.8</aspectjweaver.version>
    <!--单元测试配置-->
    <junit.version>4.12</junit.version>
    <!-- log4j日志文件管理包版本 -->
    <slf4j.version>1.7.7</slf4j.version>
    <log4j.version>2.13.0</log4j.version>
    <!--jboss-logging日志包版本-->
    <jboss-logging.version>3.4.1.Final</jboss-logging.version>
    <!--servlet-api配置-->
    <servlet-api.version>2.5</servlet-api.version>
    <!--java标准标签库-->
    <jstl.version>1.2</jstl.version>
    <!--mybatis-spring整合配置-->
    <mybatis-spring.version>2.0.3</mybatis-spring.version>
    <!--数据库版本号-->
    <mysql.version>8.0.17</mysql.version>
    <!--使用jsp内置对象等jsp核心api版本号-->
    <jsp-api.version>2.0</jsp-api.version>
    <!--druid是阿里巴巴开发的Java语言中最好的数据库连接池-->
    <druid.version>1.0.9</druid.version>
    <!--hibernate-validator包版本配置-->
    <hibernate-validator.version>6.1.2.Final</hibernate-validator.version>
    <validation-api.version>2.0.1.Final</validation-api.version>
    <!-- 时间操作组件 -->
    <joda-time.version>2.10.5</joda-time.version>
    <!-- Jackson Json处理工具包 -->
    <jackson-databind.version>2.10.2</jackson-databind.version>
    <jackson-core.version>2.10.2</jackson-core.version>
    <jackson-annotations.version>2.10.2</jackson-annotations.version>
    <!-- httpclient -->
    <httpclient.version>4.5.11</httpclient.version>
    <!--mybatis分页插件-->
    <mybatis-paginator.version>1.2.17</mybatis-paginator.version>
    <pagehelper.version>5.1.11</pagehelper.version>
    <!-- Redis客户端 -->
    <jedis.version>3.2.0</jedis.version>
    <!-- solr客户端 -->
    <solr-solrj.version>8.4.1</solr-solrj.version>
    <!--任务调度-->
    <quartz.version>2.3.2</quartz.version>
    <!-- spring rabbitmq AMQP（Advanced Message Queuing Protocol） 高级消息队列 -->
    <spring-rabbit.version>2.2.4.RELEASE</spring-rabbit.version>
    <!--guava-->
    <guava.version>28.2-jre</guava.version>
    <!--MockWebServer-->
    <!--A scriptable web server for testing HTTP clients-->
    <mockwebserver.version>2.7.5</mockwebserver.version>
    <!--shiro-all-->
    <shiro-all.version>1.5.1</shiro-all.version>
    <!--javax.mail-->
    <javax.mail.version>1.6.2</javax.mail.version>
    <!--Microsoft Office（Excel、WORD、PowerPoint、Visio等）格式档案读和写的功能包-->
    <poi.version>4.1.2</poi.version>
    <!--xmlpull解析器-->
    <xmlpull.version>1.1.3.4d_b4_min</xmlpull.version>
    <xpp3.version>1.1.4c</xpp3.version>
    <!--xstream 可以轻易的将Java对象和xml文档相互转换-->
    <xstream.version>1.4.16</xstream.version>
    <!--jaxb是Java Architecture for XML Binding的缩写。可以将一个Java对象转变成为XML格式，反之亦然-->
    <jaxb-api.version>2.3.1</jaxb-api.version>
    <jaxb-impl.version>2.3.2</jaxb-impl.version>
    <jaxb-core.version>2.3.0.1</jaxb-core.version>
    <!--JavaBeans Activation Framework (JAF)。一般用于统一不同数据格式的处理。常用于 JavaMail 中-->
    <activation.version>1.1.1</activation.version>
    <!--文件的编码格式-->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <!--jar包管理-->
  <!--引入依赖-->
  <dependencies>
    <!--httpclient-->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.3</version>
    </dependency>
    <!-- spring -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectjweaver.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.aopalliance-1.0</artifactId>
      <version>1.0.0-rc1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!--spring包-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!--用于SpringMVC-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!--用于数据库源相关操作-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!--ServletAPI-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>${servlet-api.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${jsp-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <!--jstl标签-->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>${jstl.version}</version>
    </dependency>
    <!--MySQL数据库驱动-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <!--测试框架-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- log start -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-1.2-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <!-- log end -->
    <!--jboss-logging-->
    <dependency>
      <groupId>org.jboss.logging</groupId>
      <artifactId>jboss-logging</artifactId>
      <version>${jboss-logging.version}</version>
    </dependency>
    <!--commons-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.9</version>
    </dependency>
    <dependency>
      <groupId>org.lucee</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6.0</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>3.3</version>
    </dependency>
    <!--mybatis-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>

    <!--MyBatis集成Spring-->
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis-spring</artifactId>
      <version>${mybatis-spring.version}</version>
    </dependency>

    <!--数据源-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid</artifactId>
      <version>${druid.version}</version>
    </dependency>
    <!--fastjson版本-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.59</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.alipay.sdk/alipay-sdk-java -->
    <dependency>
      <groupId>com.alipay.sdk</groupId>
      <artifactId>alipay-sdk-java</artifactId>
      <version>4.9.5.ALL</version>
    </dependency>
    <!--任务调度依赖-->
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz</artifactId>
      <version>${quartz.version}</version>
    </dependency>
    <dependency>
      <groupId>org.quartz-scheduler</groupId>
      <artifactId>quartz-jobs</artifactId>
      <version>${quartz.version}</version>
    </dependency>
    <!--配置jdk9-->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.29</version>
    </dependency>
    <!--数据验证依赖-->
    <!-- use hibernate-validator to validate entity before enter controller -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate-validator.version}</version>
    </dependency>
    <!-- 时间操作组件 -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson-annotations.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-databind.version}</version>
    </dependency>
    <!-- httpclient -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
    </dependency>
    <!--mybatis分页插件-->
    <dependency>
      <groupId>com.github.miemiedev</groupId>
      <artifactId>mybatis-paginator</artifactId>
      <version>${mybatis-paginator.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.pagehelper</groupId>
      <artifactId>pagehelper</artifactId>
      <version>${pagehelper.version}</version>
    </dependency>
    <!-- Redis客户端 -->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${jedis.version}</version>
    </dependency>
    <!-- solr客户端 -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
      <version>${solr-solrj.version}</version>
    </dependency>
    <!-- fastDFS -->
    <dependency>
      <groupId>in.clouthink.repack</groupId>
      <artifactId>fastdfs-client-java</artifactId>
      <version>1.29.4</version>
    </dependency>
    <dependency>
      <groupId>net.oschina.zcx7878</groupId>
      <artifactId>fastdfs-client-java</artifactId>
      <version>1.27.0.0</version>
    </dependency>
    <!-- spring rabbitmq -->
    <dependency>
      <groupId>org.springframework.amqp</groupId>
      <artifactId>spring-rabbit</artifactId>
      <version>${spring-rabbit.version}</version>
    </dependency>
<!--guava-->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <!--MockWebServer-->
    <!--A scriptable web server for testing HTTP clients-->
    <dependency>
      <groupId>com.squareup.okhttp</groupId>
      <artifactId>mockwebserver</artifactId>
      <version>${mockwebserver.version}</version>
    </dependency>
    <!-- shiro -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-all</artifactId>
      <version>${shiro-all.version}</version>
    </dependency>
    <!--javax.mail-->
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>${javax.mail.version}</version>
    </dependency>
    <!--Microsoft Office（Excel、WORD、PowerPoint、Visio等）格式档案读和写的功能包-->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>${poi.version}</version>
    </dependency>
<!--xmlpull解析器-->
    <dependency>
      <groupId>xmlpull</groupId>
      <artifactId>xmlpull</artifactId>
      <version>${xmlpull.version}</version>
    </dependency>
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3</artifactId>
      <version>${xpp3.version}</version>
    </dependency>
    <!--xstream 可以轻易的将Java对象和xml文档相互转换-->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>${xstream.version}</version>
    </dependency>
    <!--jaxb是Java Architecture for XML Binding的缩写。可以将一个Java对象转变成为XML格式，反之亦然-->
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>${jaxb-api.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>${jaxb-impl.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-core</artifactId>
      <version>${jaxb-core.version}</version>
    </dependency>
    <!--JavaBeans Activation Framework (JAF)。一般用于统一不同数据格式的处理。常用于 JavaMail 中-->
    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>${activation.version}</version>
    </dependency>
  </dependencies>

  <licenses>
    <license>
      <name>The BSD 3-Clause License</name>
      <url>https://opensource.org/licenses/BSD-3-Clause</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <url></url>
    <connection></connection>
    <developerConnection></developerConnection>
  </scm>
  <developers>
    <developer>
      <name>wxpay</name>
      <email></email>
      <url>https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=11_1</url>
    </developer>
  </developers>
  <build>
    <finalName>eat</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <!--插件-->
      <plugins>
        <!--tomcat插件-->
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
          <!--插件使用的相关配置-->
          <configuration>
            <!--端口号-->
            <port>8080</port>
            <!--写当前项目的名字(虚拟路径),如果写/，那么每次访问项目就不需要加项目名字了-->
            <path>/${build.finalName}</path>
            <!--解决get请求乱码-->
            <uriEncoding>UTF-8</uriEncoding>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <resources>
      <!--因为mapper目录下，有xml映射文件 -->
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <!--resources 目录 -->
      <!-- 这里的resource配置的是需要导入到项目的资源文件夹 -->
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
        </includes>
      </resource>

    </resources>
  </build>
</project>
