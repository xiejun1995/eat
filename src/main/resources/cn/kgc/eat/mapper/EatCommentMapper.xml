<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.kgc.eat.mapper.EatCommentMapper" >
  <resultMap id="BaseResultMap" type="cn.kgc.eat.pojo.EatComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    <id column="COMMENT_ID" property="commentId" jdbcType="BIGINT" />
    <result column="COMMENT_AUTHOR" property="commentAuthor" jdbcType="INTEGER" />
    <result column="COMMENT_DATE" property="commentDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.kgc.eat.pojo.EatComment" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    <result column="COMMENT_CONTENT" property="commentContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    COMMENT_ID, COMMENT_AUTHOR, COMMENT_DATE
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    COMMENT_CONTENT
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from eat_comment
    where COMMENT_ID = #{commentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    delete from eat_comment
    where COMMENT_ID = #{commentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.kgc.eat.pojo.EatComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    insert into eat_comment (COMMENT_ID, COMMENT_AUTHOR, COMMENT_DATE, 
      COMMENT_CONTENT)
    values (#{commentId,jdbcType=BIGINT}, #{commentAuthor,jdbcType=INTEGER}, #{commentDate,jdbcType=TIMESTAMP}, 
      #{commentContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.kgc.eat.pojo.EatComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    insert into eat_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        COMMENT_ID,
      </if>
      <if test="commentAuthor != null" >
        COMMENT_AUTHOR,
      </if>
      <if test="commentDate != null" >
        COMMENT_DATE,
      </if>
      <if test="commentContent != null" >
        COMMENT_CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commentId != null" >
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="commentAuthor != null" >
        #{commentAuthor,jdbcType=INTEGER},
      </if>
      <if test="commentDate != null" >
        #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null" >
        #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.kgc.eat.pojo.EatComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    update eat_comment
    <set >
      <if test="commentAuthor != null" >
        COMMENT_AUTHOR = #{commentAuthor,jdbcType=INTEGER},
      </if>
      <if test="commentDate != null" >
        COMMENT_DATE = #{commentDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentContent != null" >
        COMMENT_CONTENT = #{commentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where COMMENT_ID = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.kgc.eat.pojo.EatComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    update eat_comment
    set COMMENT_AUTHOR = #{commentAuthor,jdbcType=INTEGER},
      COMMENT_DATE = #{commentDate,jdbcType=TIMESTAMP},
      COMMENT_CONTENT = #{commentContent,jdbcType=LONGVARCHAR}
    where COMMENT_ID = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.kgc.eat.pojo.EatComment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Feb 22 14:23:02 CST 2020.
    -->
    update eat_comment
    set COMMENT_AUTHOR = #{commentAuthor,jdbcType=INTEGER},
      COMMENT_DATE = #{commentDate,jdbcType=TIMESTAMP}
    where COMMENT_ID = #{commentId,jdbcType=BIGINT}
  </update>
  <!--
    后台查询评论详情
    @姚天祥 set 2020-02-28 09:00
  -->
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT * FROM eat_comment
  </select>

  <!--
    增加评论
    @姚天祥 set 2020-02-28 9:00
  -->
  <insert id="addComment">
    INSERT INTO eat_comment SET
    COMMENT_AUTHOR = #{commentAuthor},
    COMMENT_CONTENT = #{commentContent},
    COMMENT_DATE = NOW(),
    COMMENT_MERCHANT_ID = #{commentMerchantId}
  </insert>

  <!--
    后台根据ID查询评论
    @姚天祥 set 2020-02-28 10:00
  -->
  <select id="findComById" resultMap="BaseResultMap">
    SELECT * FROM eat_comment WHERE COMMENT_ID = #{commentId}
  </select>

  <!--
    修改评论
    @姚天祥 set 2020-02-28 10:00
  -->
  <update id="updateComment">
    UPDATE eat_comment SET COMMENT_AUTHOR = #{commentAuthor},
    COMMENT_CONTENT = #{commentContent},
    COMMENT_MERCHANT_ID = #{commentMerchantId}
    WHERE COMMENT_ID = #{commentId}
  </update>

  <!--
    根据ID删除评论信息
    @姚天祥 set 2020-02-28 11:00
  -->
  <delete id="deleteById">
    DELETE FROM eat_comment WHERE COMMENT_ID = #{commentId}
  </delete>

  <select id="commentList" resultMap="BaseResultMap">
        SELECT c.*,u.USER_NAME FROM eat_comment AS c,eat_user AS u
     WHERE c.COMMENT_AUTHOR=u.USER_ID AND COMMENT_MERCHANT_ID=#{commentMerchantId}
  </select>

  <select id="commentAuthorByName" resultType="integer">
    select USER_ID from eat_user where USER_NAME=#{userName}
  </select>

  <delete id="deleteComment" parameterType="integer">
        delete  from eat_comment where COMMENT_ID=#{id}
  </delete>

  <select id="selectEatCommentById" resultType="integer">
        SELECT `COMMENT_MERCHANT_ID` FROM eat_comment WHERE `COMMENT_ID`=#{id}
  </select>
</mapper>